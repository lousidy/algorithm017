

1，2的幂：  给定一个整数，编写一个函数来判断它是否是 2 的幂次方。
https://leetcode-cn.com/problems/power-of-two/submissions/

class Solution {
    public boolean isPowerOfTwo(int n) {
        if (n == 0){
			return false;
		} 
        while (n % 2 == 0) {
			n /= 2;
		}
		
         return n == 1;
    }
}



2, 颠倒二进制位
https://leetcode-cn.com/problems/reverse-bits/

public class Solution {
    // you need treat n as an unsigned value
    public int reverseBits(int n) {
        n = ((n & 0xffff0000) >>> 16) | ((n & 0x0000ffff) << 16);
        n = ((n & 0xff00ff00) >>> 8) | ((n & 0x00ff00ff) << 8);
        n = ((n & 0xf0f0f0f0) >>> 4) | ((n & 0x0f0f0f0f) << 4);
        n = ((n & 0xcccccccc) >>> 2) | ((n & 0x33333333) << 2);
        n = ((n & 0xaaaaaaaa) >>> 1) | ((n & 0x55555555) << 1);
        return n;
    }
}